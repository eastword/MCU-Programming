;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Fri Jul 24 2020
; Processor: 80C52
; Compiler:  ASEM-51 (Proteus)
;====================================================================

$NOMOD51
$INCLUDE (80C52.MCU)

;====================================================================
; DEFINITIONS
;====================================================================

;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      org   0000h
      jmp   Start

;====================================================================
; CODE SEGMENT
;====================================================================

delay:

     PUSH ACC
     MOV  ACC, R0
     PUSH ACC
     MOV ACC, R1
     PUSH ACC
   
     MOV R1, #200


  delay_loop_0:
        MOV R0,#0ffh

        delay_loop:
        NOP
        NOP
        NOP
        DJNZ  R0, delay_loop

    DJNZ R1, delay_loop_0

    POP ACC
    MOV R1, ACC
    POP ACC
    MOV R0, ACC
    POP ACC
    RET

     


     

led_on_action:

         PUSH  ACC
         MOV  A, R5
          
         ORL  P2, A
         POP  ACC
         RET

led_off_action:

         PUSH  ACC
         MOV  A, R5
         
         CPL  A
         ANL  P2, A
         POP  ACC
         RET

led_toggle_action:

         PUSH  ACC
         MOV  ACC, R0
         PUSH ACC
        
         MOV R0,#40H

 toggle_loop:
         CALL led_on_action
         CALL delay
         CALL led_off_action
         CALL delay
         DJNZ  R0, toggle_loop

         POP  ACC
         MOV R0, ACC
         POP  ACC
         RET


      
led_ctrl:

       PUSH  ACC
       MOV  A, R6
       XRL  A, #00
       JZ   led_off
       
       MOV A, R6
       XRL A, #01H
       JZ  led_on
 
       MOV  A, R6
       XRL  A, #02H
       JZ   led_toggle

       JMP  led_ctrl_exit

led_on:
       CALL led_on_action
        JMP  led_ctrl_exit

led_off:
        CALL led_off_action
         JMP  led_ctrl_exit
led_toggle:
         CALL  led_toggle_action

led_ctrl_exit:
         POP  ACC
         RET

 
     

      org   0100h
Start:	
      ; Write your code here
       MOV R5, #0FFH
       MOV R6, #02H
       CALL led_ctrl

      
Loop:	
      jmp Loop

;====================================================================
      END
